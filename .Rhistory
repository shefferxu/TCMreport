TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
Sys.setlocale("LC_ALL","Chinese")
library("readxl")
# TCM2019 <- NULL
# options( java.parameters = "-Xmx5000m")
# library(xlsx)
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
# data_frame_names <- data_frame_names[-5]
mypath<-dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(mypath)
options(encoding ="UTF-8")
# 读取指定的 Rmd 文件
rmd_file <- "template.Rmd"
# library(xlsx)
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
# srcfile <- newRmd
# outdoc <- paste(metal, "-", herb, ".docx", sep = "")
# rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
metal
herb
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
outdoc
srcfile
options(encoding ="GB2312")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
options(encoding ="UTF-8")
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
?render
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc,encoding = "UTF-8")
render(input = srcfile, output_format = "word_document", output_file = outdoc,encoding = "UTF-8")
library("readxl")
library(rmarkdown)
# library(xlsx)
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
render(input = srcfile, output_format = "word_document", output_file = outdoc,encoding = "UTF-8")
}
}
TCMname
CurrentName <- "铝-金银花.Rmd" #需注释需注释需注释
CurrentName <- sub(".Rmd","",CurrentName)
Pollutantname<-gsub("-.*", "", CurrentName)
TCMname<-gsub(".*-", "", CurrentName)
Pollunit<-"mg/kg"
expunit<-"μg/kg bw"
#Pb、Cd、As、Hg、Cu的t值分别为14%、14%、35%、24%、14%.没有Al的转移率t值，根据风险高估，转移率为0.35
metal_data <- data.frame(
Metal = c("铅", "镉", "砷", "汞", "铜", "铝","铬"),
Transferrate = c(0.14, 0.14, 0.35, 0.24, 0.14, 0.35,0.35)
)
# 使用Pollutantname读取Metal中的Transferrate值
t <- metal_data$Transferrate[match(Pollutantname, metal_data$Metal)]
# 创建LOD数据框
metal_limits <- data.frame(
Metal = c("铝", "钒", "铬", "锰", "镍", "铜", "砷", "钼", "镉", "钡", "汞", "铅"),
Limits_of_Detection = c(0.198, 0.131, 0.135, 0.026, 0.033, 0.022, 0.015, 0.096, 0.002, 0.079, 0.014, 0.021)
)
LOD<-metal_limits$Limits_of_Detection[match(Pollutantname, metal_limits$Metal)]
TCMPollutantname<-paste(Pollutantname,TCMname,".csv",sep = "")
Consumptionname<-paste("./Consum/",TCMname,".csv",sep = "")
Consumptiondata<-read.csv(Consumptionname,encoding = "UTF-8")
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
abbreviations<-read.csv("缩略语.csv",encoding = "UTF-8")
TCMname
Consumptionname<-paste("./Consum/",TCMname,".csv",sep = "")
Consumptiondata<-read.csv(Consumptionname,encoding = "UTF-8")
Consumptiondata<-read.csv(Consumptionname)
Consumptionname
gwtwd()
getwd()
Consumptiondata<-read.csv(Consumptionname)
library(reshape2)
library(flextable)
library(GGally)
library(factoextra)
library(FactoMineR)
library(fitdistrplus)
library(MASS)
library(survival)
library(npsurv)
library(lsei)
library(SuppDists)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE,warning=FALSE, message=FALSE)
#--设置污染物名称、食药物质名称、污染物的LOD值、转移率以及单位等
CurrentName <- knitr::current_input()
CurrentName <- "铝-金银花.Rmd" #需注释需注释需注释
CurrentName <- sub(".Rmd","",CurrentName)
Pollutantname<-gsub("-.*", "", CurrentName)
TCMname<-gsub(".*-", "", CurrentName)
Pollunit<-"mg/kg"
expunit<-"μg/kg bw"
#Pb、Cd、As、Hg、Cu的t值分别为14%、14%、35%、24%、14%.没有Al的转移率t值，根据风险高估，转移率为0.35
metal_data <- data.frame(
Metal = c("铅", "镉", "砷", "汞", "铜", "铝","铬"),
Transferrate = c(0.14, 0.14, 0.35, 0.24, 0.14, 0.35,0.35)
)
# 使用Pollutantname读取Metal中的Transferrate值
t <- metal_data$Transferrate[match(Pollutantname, metal_data$Metal)]
# 创建LOD数据框
metal_limits <- data.frame(
Metal = c("铝", "钒", "铬", "锰", "镍", "铜", "砷", "钼", "镉", "钡", "汞", "铅"),
Limits_of_Detection = c(0.198, 0.131, 0.135, 0.026, 0.033, 0.022, 0.015, 0.096, 0.002, 0.079, 0.014, 0.021)
)
LOD<-metal_limits$Limits_of_Detection[match(Pollutantname, metal_limits$Metal)]
TCMPollutantname<-paste(Pollutantname,TCMname,".csv",sep = "")
Consumptionname<-paste("./Consum/",TCMname,".csv",sep = "")
Consumptiondata<-read.csv(Consumptionname)
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
abbreviations<-read.csv("缩略语.csv",encoding = "UTF-8")
# Chunk 1: setup
library(reshape2)
library(flextable)
library(GGally)
library(factoextra)
library(FactoMineR)
library(fitdistrplus)
library(MASS)
library(survival)
library(npsurv)
library(lsei)
library(SuppDists)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE,warning=FALSE, message=FALSE)
# options(encoding ="GB2312")
# Chunk 1: setup
library(reshape2)
library(flextable)
library(GGally)
library(factoextra)
library(FactoMineR)
library(fitdistrplus)
library(MASS)
library(survival)
library(npsurv)
library(lsei)
library(SuppDists)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE,warning=FALSE, message=FALSE)
# options(encoding ="GB2312")
# Chunk 2
#--设置污染物名称、食药物质名称、污染物的LOD值、转移率以及单位等
CurrentName <- knitr::current_input()
CurrentName <- "铝-金银花.Rmd" #需注释需注释需注释
CurrentName <- sub(".Rmd","",CurrentName)
Pollutantname<-gsub("-.*", "", CurrentName)
TCMname<-gsub(".*-", "", CurrentName)
Pollunit<-"mg/kg"
expunit<-"μg/kg bw"
#Pb、Cd、As、Hg、Cu的t值分别为14%、14%、35%、24%、14%.没有Al的转移率t值，根据风险高估，转移率为0.35
metal_data <- data.frame(
Metal = c("铅", "镉", "砷", "汞", "铜", "铝","铬"),
Transferrate = c(0.14, 0.14, 0.35, 0.24, 0.14, 0.35,0.35)
)
# 使用Pollutantname读取Metal中的Transferrate值
t <- metal_data$Transferrate[match(Pollutantname, metal_data$Metal)]
# 创建LOD数据框
metal_limits <- data.frame(
Metal = c("铝", "钒", "铬", "锰", "镍", "铜", "砷", "钼", "镉", "钡", "汞", "铅"),
Limits_of_Detection = c(0.198, 0.131, 0.135, 0.026, 0.033, 0.022, 0.015, 0.096, 0.002, 0.079, 0.014, 0.021)
)
LOD<-metal_limits$Limits_of_Detection[match(Pollutantname, metal_limits$Metal)]
# Chunk 3
#--上传数据
TCMPollutantname<-paste(Pollutantname,TCMname,".csv",sep = "")
Consumptionname<-paste("./Consum/",TCMname,".csv",sep = "")
Consumptiondata<-read.csv(Consumptionname,encoding = "UTF-8")
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
abbreviations<-read.csv("缩略语.csv",encoding = "UTF-8")
Consumptionname
Consumptiondata
# Chunk 1: setup
library(reshape2)
library(flextable)
library(GGally)
library(factoextra)
library(FactoMineR)
library(fitdistrplus)
library(MASS)
library(survival)
library(npsurv)
library(lsei)
library(SuppDists)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE,warning=FALSE, message=FALSE)
# options(encoding ="GB2312")
# Chunk 2
#--设置污染物名称、食药物质名称、污染物的LOD值、转移率以及单位等
CurrentName <- knitr::current_input()
CurrentName <- "铝-金银花.Rmd" #需注释需注释需注释
CurrentName <- sub(".Rmd","",CurrentName)
Pollutantname<-gsub("-.*", "", CurrentName)
TCMname<-gsub(".*-", "", CurrentName)
Pollunit<-"mg/kg"
expunit<-"μg/kg bw"
#Pb、Cd、As、Hg、Cu的t值分别为14%、14%、35%、24%、14%.没有Al的转移率t值，根据风险高估，转移率为0.35
metal_data <- data.frame(
Metal = c("铅", "镉", "砷", "汞", "铜", "铝","铬"),
Transferrate = c(0.14, 0.14, 0.35, 0.24, 0.14, 0.35,0.35)
)
# 使用Pollutantname读取Metal中的Transferrate值
t <- metal_data$Transferrate[match(Pollutantname, metal_data$Metal)]
# 创建LOD数据框
metal_limits <- data.frame(
Metal = c("铝", "钒", "铬", "锰", "镍", "铜", "砷", "钼", "镉", "钡", "汞", "铅"),
Limits_of_Detection = c(0.198, 0.131, 0.135, 0.026, 0.033, 0.022, 0.015, 0.096, 0.002, 0.079, 0.014, 0.021)
)
LOD<-metal_limits$Limits_of_Detection[match(Pollutantname, metal_limits$Metal)]
TCMPollutantname<-paste(Pollutantname,TCMname,".csv",sep = "")
Consumptionname<-paste("./Consum/",TCMname,".csv",sep = "")
Consumptiondata<-read.csv(Consumptionname,encoding = "UTF-8")
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
abbreviations<-read.csv("缩略语.csv",encoding = "UTF-8")
library("readxl")
# TCM2019 <- NULL
# options( java.parameters = "-Xmx5000m")
# library(xlsx)
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
# setwd("E:/deltawork/TCM data/数据分析结果/2019虹桥 康桥 万仕城/以医院姓名、手机号姓名和姓名为唯一性识别号")
# data_frame_names <- list.files(pattern = "*.csv")       # Get all file names
# data_frame_names <- data_frame_names[-5]
mypath<-dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(mypath)
options(encoding ="UTF-8")
# 读取指定的 Rmd 文件
rmd_file <- "template.Rmd"
library("readxl")
# TCM2019 <- NULL
# options( java.parameters = "-Xmx5000m")
# library(xlsx)
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
# library(xlsx)
Metal <- c("铝","镉","铬","铅")
TCM <- c("黄芪","金银花","鸡内金")
for (metal in Metal) {
for (herb in TCM) {
currRmd <- "template.Rmd"
newRmd <- paste(metal, "-", herb, ".Rmd", sep = "")
file.copy(currRmd, newRmd, overwrite = TRUE)
content <- readLines(newRmd)
# 找到第三个 newpage 的位置
newpage_indices <- grep("newpage", content)
third_newpage_index <- newpage_indices[3]
# 在第三个 newpage 之后添加 r child 新模块
# 在第三个 newpage 之后添加 r child 新模块
new_content <- c(content[1:third_newpage_index],
paste0("\n```{r child = '", herb, "介绍.Rmd'}\n"),
"```",
paste0("\n```{r child = '", metal, "的危害表征.Rmd'}\n"),
"```",
content[(third_newpage_index + 1):length(content)])
# 将修改后的内容写回文件
writeLines(new_content, newRmd)
# 渲染RMD文件并导出Word文件
srcfile <- newRmd
outdoc <- paste(metal, "-", herb, ".docx", sep = "")
rmarkdown::render(input = srcfile, output_format = "word_document", output_file = outdoc)
}
}
# Chunk 1: setup
library(reshape2)
library(flextable)
library(GGally)
library(factoextra)
library(FactoMineR)
library(fitdistrplus)
library(MASS)
library(survival)
library(npsurv)
library(lsei)
library(SuppDists)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE,warning=FALSE, message=FALSE)
# Chunk 2
#--设置污染物名称、食药物质名称、污染物的LOD值、转移率以及单位等
CurrentName <- knitr::current_input()
CurrentName <- "铝-金银花.Rmd" #需注释需注释需注释
CurrentName <- sub(".Rmd","",CurrentName)
Pollutantname<-gsub("-.*", "", CurrentName)
TCMname<-gsub(".*-", "", CurrentName)
Pollunit<-"mg/kg"
expunit<-"μg/kg bw"
#Pb、Cd、As、Hg、Cu的t值分别为14%、14%、35%、24%、14%.没有Al的转移率t值，根据风险高估，转移率为0.35
metal_data <- data.frame(
Metal = c("铅", "镉", "砷", "汞", "铜", "铝","铬"),
Transferrate = c(0.14, 0.14, 0.35, 0.24, 0.14, 0.35,0.35)
)
# 使用Pollutantname读取Metal中的Transferrate值
t <- metal_data$Transferrate[match(Pollutantname, metal_data$Metal)]
# 创建LOD数据框
metal_limits <- data.frame(
Metal = c("铝", "钒", "铬", "锰", "镍", "铜", "砷", "钼", "镉", "钡", "汞", "铅"),
Limits_of_Detection = c(0.198, 0.131, 0.135, 0.026, 0.033, 0.022, 0.015, 0.096, 0.002, 0.079, 0.014, 0.021)
)
LOD<-metal_limits$Limits_of_Detection[match(Pollutantname, metal_limits$Metal)]
TCMPollutantname<-paste(Pollutantname,TCMname,".csv",sep = "")
Consumptionname<-paste("./Consum/",TCMname,".csv",sep = "")
Consumptiondata<-read.csv(Consumptionname,encoding = "UTF-8")
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
abbreviations<-read.csv("缩略语.csv",encoding = "UTF-8")
Consumptionname
TCMPollutantname
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
TCMPollutantname
TCMPollutantname
Sys.setlocale("LC_ALL","Chinese")
Pollutantdata<-read.csv(paste0("./Poll/",TCMPollutantname))
abbreviations<-read.csv("缩略语.csv",encoding = "UTF-8")
